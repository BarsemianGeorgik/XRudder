from MiniMaxNode import MiniMaxNode
import sys
from MiniMaxTree import MiniMaxTree


if __name__ == '__main__':

    currentGameState = [['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                    ['.', '.', '.', '.', 'X', '.', '.', '.', '.', '.', '.', '.', ],
                    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ], ]
    # Creating root node with current state and default heuristic at 0
    rootNode = MiniMaxNode(currentGameState, 0)



    # AI move 1
    AIMove_1 =  [['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                 ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                 ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                 ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                 ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                 ['.', '.', '.', '.', 'X', '.', '.', '.', '.', '.', '.', '.', ],
                 ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                 ['.', '.', '.', '.', '.', '.', '.', 'O', '.', '.', '.', '.', ],
                 ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                 ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ], ]
    #AI move 2
    AIMove_2 =  [['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                 ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                 ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                 ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                 ['.', '.', '.', '.', '.', 'O', '.', '.', '.', '.', '.', '.', ],
                 ['.', '.', '.', '.', 'X', '.', '.', '.', '.', '.', '.', '.', ],
                 ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                 ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                 ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                 ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ], ]
    # # Creating node of the Ai moves and putting inside a list to later pass as Root children
    AImove1Node = MiniMaxNode(AIMove_1, 0)



    AImove2Node = MiniMaxNode(AIMove_2, 0)

    PlayerMoveAI1_1 = [['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                       ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                       ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                       ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                       ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                       ['.', '.', '.', '.', 'X', '.', '.', '.', '.', '.', '.', '.', ],
                       ['.', '.', '.', 'X', '.', '.', '.', '.', '.', '.', '.', '.', ],
                       ['.', '.', '.', '.', '.', '.', '.', 'O', '.', '.', '.', '.', ],
                       ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                       ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ], ]

    PlayerMoveAI1_2 = [['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                       ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                       ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                       ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                       ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                       ['.', '.', '.', '.', 'X', '.', '.', 'X', '.', '.', '.', '.', ],
                       ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                       ['.', '.', '.', '.', '.', '.', '.', 'O', '.', '.', '.', '.', ],
                       ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                       ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ], ]

    PlayerMoveAI2_1 = [['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                       ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                       ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                       ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                       ['.', '.', '.', '.', '.', 'O', 'X', '.', '.', '.', '.', '.', ],
                       ['.', '.', '.', '.', 'X', '.', '.', '.', '.', '.', '.', '.', ],
                       ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                       ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                       ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                       ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ], ]

    PlayerMoveAI2_2 = [['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                       ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                       ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                       ['.', '.', '.', '.', '.', '.', 'X', '.', '.', '.', '.', '.', ],
                       ['.', '.', '.', '.', '.', 'O', '.', '.', '.', '.', '.', '.', ],
                       ['.', '.', '.', '.', 'X', '.', '.', '.', '.', '.', '.', '.', ],
                       ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                       ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                       ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ],
                       ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ], ]

    # Creating Player Nodes and assigning Random Heuristic Values
    PlayerMoveAI_1_1_Node = MiniMaxNode(PlayerMoveAI1_1, 10)
    PlayerMoveAI_1_2_Node = MiniMaxNode(PlayerMoveAI1_2, -5)
    PlayerMoveAI_2_1_Node = MiniMaxNode(PlayerMoveAI2_1, -3)

    PlayerMoveAI_2_2_Node = MiniMaxNode(PlayerMoveAI2_2, 3)

    # Adding player moves as AI_1 children Node
    PlayerMoveListForAI_1 = [PlayerMoveAI_1_1_Node, PlayerMoveAI_1_2_Node]
    AImove1Node.setChildren(PlayerMoveListForAI_1)

    # Adding player moves as AI_2 children Node
    PlayerMoveListForAI_2 = [PlayerMoveAI_2_1_Node, PlayerMoveAI_2_2_Node]
    AImove2Node.setChildren(PlayerMoveListForAI_2)

    #setting AI nodes as child of Root
    AIMoveList = []
    AIMoveList.append(AImove1Node)
    AIMoveList.append(AImove2Node)
    rootNode.setChildren(AIMoveList)

    #setting tree Root Node in MiniMax
    miniMaxTree = MiniMaxTree()
    miniMaxTree.setRoot(rootNode)

    #MiniMax Tree is now ready to be computed
    miniMaxTree.computeMiniMax()

    val = miniMaxTree.getRootValue()
    print(" Root value = " + str(val))

    print("The chosen move for AI is:")
    answer = miniMaxTree.getAIComputedMove()

    for row in answer:
        for elem in row:
            print(elem, end=' ')
        print()
